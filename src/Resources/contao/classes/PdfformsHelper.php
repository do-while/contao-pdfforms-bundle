<?php
namespace Softleister\Pdfforms; use Contao\Config; use Contao\System; use Contao\Database; use Contao\Controller; use Contao\StringUtil; use setasign\Fpdi\Tcpdf\Fpdi; define("\114\x49\132\x45\x4e\132\x50", "\114\x69\x63\145\x6e\143\145"); define("\x50\x52\x4f\104\x55\x43\124", "\x70\144\x66\146\x6f\x72\x6d\x73"); define("\126\60\x56\x34\x58\x4a\x45\x77\x74\166\x32\106\103\166\x58\154\x52\116", "\x31\x32\x33\64\x35\x36\67\x38\x39\x30\61\x32\63\64\65\x36\67\x38\71"); class PdfformsHelper { protected static $arrProtectflags = array("\x6d\x6f\144\x69\146\171", "\x65\170\164\162\141\x63\164", "\160\x72\x69\x6e\164", "\160\x72\151\156\164\55\150\x69\x67\150", "\143\157\x70\171", "\x61\156\156\x6f\x74\x2d\146\157\x72\x6d\x73", "\x66\151\x6c\x6c\55\146\x6f\162\x6d\163"); public static function pdfforms($mode, $arrPDF, $datei = '') { $hascontent = false; if ($mode === "\123") { $_SESSION["\160\144\146\x5f\x66\157\x72\155\x73"]["\x70\x64\146\144\157\x63\165\155\x65\x6e\164"] = ''; } $l = array(); $l["\141\137\155\x65\164\x61\137\144\151\162"] = "\154\164\162"; $l["\141\x5f\x6d\145\164\x61\x5f\x63\x68\141\162\x73\x65\x74"] = $GLOBALS["\x54\x4c\137\x43\x4f\116\106\x49\x47"]["\x63\x68\141\x72\141\x63\x74\x65\x72\x53\x65\x74"]; $l["\141\x5f\155\145\x74\141\137\x6c\141\156\147\165\141\x67\x65"] = $GLOBALS["\x54\114\x5f\114\101\x4e\x47\x55\101\x47\105"]; $l["\167\x5f\160\141\147\145"] = "\x70\x61\x67\x65"; $pdf = new Fpdi(PDF_PAGE_ORIENTATION, "\155\155", PDF_PAGE_FORMAT, true); $pages = 0; if (!empty($arrPDF["\166\157\x72\154\141\x67\x65"]) && file(TL_ROOT . "\x2f" . $arrPDF["\166\x6f\162\154\x61\147\x65"])) { $pages = $pdf->setSourceFile(TL_ROOT . "\x2f" . $arrPDF["\x76\x6f\162\154\x61\147\145"]); } $pdf->SetCreator(PDF_CREATOR . (Self::E9EBD6F7C44D361732DA31836C7D15BD() ? "\x2c" : "\x2c\40\x44\105\115\x4f") . "\x20\x63\x6f\x6e\164\x61\x6f\55\x70\144\x66\146\157\x72\x6d\163\x2d\x62\165\x6e\x64\154\x65"); $pdf->SetAuthor($arrPDF["\141\165\x74\150\x6f\162"]); $pdf->SetTitle($arrPDF["\164\x69\x74\x6c\145"]); $pdf->SetSubject($arrPDF["\146\x6f\162\155\164\151\164\x6c\x65"]); $pdf->setPrintHeader(false); $pdf->setPrintFooter(false); $pdf->SetMargins(0, 0, 0); $pdf->SetAutoPageBreak(true, 0); $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO); $pdf->setLanguageArray($l); $pdf->getAliasNbPages(); $customfont = array("\122" => false, "\102" => false, "\111" => false, "\x49\102" => false); foreach ($customfont as $attr => $status) { if (!empty($arrPDF[$attr]) && file_exists(TL_ROOT . "\57" . $arrPDF[$attr])) { $customfont[$attr] = \TCPDF_FONTS::addTTFfont(TL_ROOT . "\57" . $arrPDF[$attr], '', '', 32, TL_ROOT . "\57" . dirname($arrPDF[$attr]) . "\57"); $file_parts = pathinfo(TL_ROOT . "\x2f" . $arrPDF[$attr]); $pdf->AddFont("\x63\x75\163\164\x6f\155\146\157\x6e\x74", $attr == "\122" ? '' : $attr, $file_parts["\x64\x69\162\156\x61\155\145"] . "\57" . strtolower($customfont[$attr] . "\56\160\150\160")); } } $seiten = -1; $pagecount = 0; $where = ''; if ($mode === "\x53") { if (!empty($arrPDF["\x6d\x75\x6c\164\x69\x66\157\x72\x6d"]) && is_array($arrPDF["\155\x75\154\164\151\x66\x6f\162\x6d"]) && $arrPDF["\155\x75\154\164\151\146\157\x72\x6d"][0]["\x62\145\144\x69\x6e\x67\165\156\147"] !== '') { $seiten = array(); foreach ($arrPDF["\155\x75\154\164\151\146\x6f\x72\155"] as $multi) { $multi["\151\156\166\145\162\164"] = "\x75\x73\145\144"; if (!Self::checkBedingung($multi, $arrPDF)) { continue; } $arrBereiche = StringUtil::trimsplit("\54", $multi["\163\x65\151\164\x65\156"]); foreach ($arrBereiche as $ber) { if (strpos($ber, "\x2d") === false) { $seiten[] = $ber; } else { $se = StringUtil::trimsplit("\x2d", $ber); for ($i = $se[0]; $i <= $se[1]; $i++) { $seiten[] = $i; } } } } if (count($seiten) < 1) { @unlink(TL_ROOT . "\57" . $datei); return false; } $seiten = array_unique($seiten, SORT_NUMERIC); $where = "\x20\101\x4e\104\x20\x70\141\x67\145\40\x49\116\x28" . implode("\x2c", $seiten) . "\51"; } } $objItems = Database::getInstance()->prepare("\123\x45\114\x45\x43\124\x20\x2a\40\x46\122\x4f\115\40\164\154\137\x70\144\146\x66\x5f\x70\x6f\x73\151\x74\151\x6f\x6e\x73\40\127\x48\105\x52\105\40\x70\x75\142\x6c\x69\163\x68\x65\144\75\61\40\x41\116\x44\40\160\x69\144\x3d\x3f" . $where . "\40\x4f\x52\x44\105\x52\x20\102\131\40\x70\x61\147\x65\x2c\40\x73\157\x72\164\x69\156\147")->execute($arrPDF["\146\157\162\x6d\x69\144"]); if ($objItems->numRows < 1 && $mode === "\x53") { @unlink(TL_ROOT . "\57" . $datei); return false; } $page = 0; if ($objItems->numRows > 0) { while ($objItems->next()) { $arrItem = array(); $arrItem["\151\144"] = $objItems->id; $arrItem["\x74\x65\170\x74\151\164\x65\x6d\x73"] = StringUtil::deserialize($objItems->textitems); $arrItem["\x70\x61\x67\x65"] = $objItems->page; $arrItem["\160\157\x73\170\x79"] = StringUtil::deserialize($objItems->posxy); $arrItem["\x61\154\x69\147\156"] = $objItems->align; $arrItem["\146\x6f\x6e\x74\x73\x74\171\154\145"] = StringUtil::deserialize($objItems->fontstyle); $arrItem["\146\x6f\x6e\164\x73\x69\172\x65"] = $objItems->fontsize; $arrItem["\142\157\162\144\145\x72\162\151\147\x68\x74"] = $objItems->borderright; foreach ($arrItem["\164\145\x78\164\151\x74\145\155\x73"] as $key => $value) { $arrItem["\164\145\170\164\x69\164\x65\155\x73"][$key]["\x66\145\154\144"] = StringUtil::decodeEntities($value["\x66\145\x6c\144"]); $arrItem["\x74\145\x78\164\151\x74\145\155\x73"][$key]["\x62\145\x64\x69\x6e\147\165\x6e\x67"] = StringUtil::decodeEntities($value["\x62\145\144\151\156\147\165\156\x67"]); } if (isset($GLOBALS["\x54\114\137\x48\x4f\117\x4b\123"]["\x70\144\146\x5f\x66\x6f\x72\x6d\x73\x50\x6f\x73\151\x74\x69\157\156\163"]) && \is_array($GLOBALS["\124\114\x5f\110\x4f\117\113\x53"]["\x70\x64\x66\x5f\146\157\162\x6d\x73\120\x6f\163\151\164\x69\x6f\x6e\x73"])) { foreach ($GLOBALS["\124\x4c\137\110\117\x4f\113\x53"]["\x70\x64\x66\137\146\x6f\x72\x6d\x73\x50\x6f\x73\x69\x74\151\x6f\156\163"] as $callback) { $arrItem = System::importStatic($callback[0])->{$callback[1]}($arrItem); } } $arrItem["\160\x61\147\x65"] = $objItems->page; $fontattr = ''; if (is_array($arrItem["\x66\x6f\x6e\x74\163\164\171\x6c\x65"])) { foreach ($arrItem["\x66\157\156\164\163\164\171\x6c\x65"] as $attr) { switch ($attr) { case "\151\164\141\x6c\151\x63": $fontattr .= "\x49"; break; case "\142\x6f\x6c\144": $fontattr .= "\102"; break; } } } switch ($arrItem["\x61\x6c\x69\x67\156"]) { case "\162\x69\147\150\164": $align = "\x52"; break; case "\x63\145\x6e\164\x65\162": $align = "\103"; break; default: $align = "\x4c"; } $color = $arrPDF["\x74\x65\x78\x74\x63\x6f\x6c\x6f\x72"] != '' ? $arrPDF["\x74\x65\x78\x74\x63\157\x6c\x6f\x72"] : "\60\x30\x30\60\60\x30"; if (strlen($color) != 6) { if (strlen($color) == 3) { $color = substr($color, 0, 1) . substr($color, 0, 1) . substr($color, 1, 1) . substr($color, 1, 1) . substr($color, 2, 1) . substr($color, 2, 1); } else { $color = "\x30\x30\x30\x30\60\x30"; } } $r = hexdec(substr($color, 0, 2)); $g = hexdec(substr($color, 2, 2)); $b = hexdec(substr($color, 4, 2)); $pdf->SetTextColor($r, $g, $b); if ($fontattr === "\x42\111") { $fontattr = "\111\x42"; } $fontidx = $fontattr == '' ? "\x52" : $fontattr; $pdf->SetFont(empty($customfont[$fontidx]) ? "\150\x65\154\x76\x65\164\x69\x63\141" : "\143\165\163\164\x6f\155\x66\x6f\x6e\x74", $fontattr, $arrItem["\146\x6f\156\164\x73\x69\172\145"]); $text = ''; foreach ($arrItem["\x74\x65\170\164\x69\164\x65\x6d\x73"] as $item) { if ($mode === "\x53") { if (!empty($item["\x62\145\144\151\156\147\x75\156\x67"])) { if (!Self::checkBedingung($item, $arrPDF)) { continue; } } } if (substr($item["\146\x65\154\x64"], 0, 1) === "\x22") { if (substr($item["\146\x65\154\x64"], 1, 1) === "\x2c" || substr($item["\x66\x65\154\x64"], 1, 1) === "\x3c") { $text = trim($text); } $text .= Controller::replaceInsertTags(trim($item["\146\x65\x6c\144"], "\42"), false) . "\40"; } else { $text .= Controller::replaceInsertTags(trim($arrPDF["\x61\x72\162\106\x69\x65\x6c\144\163"][Self::normalisierung($item["\146\145\154\144"])][$mode === "\123" ? "\x76\141\154\165\145" : "\x6f\x72\151\x67"]), false) . "\40"; } } if ($text === '') { continue; } while ($page != $arrItem["\160\141\x67\145"]) { if ($page > 0) { Self::C1B98360E6714BCA818AC62C8F21E9F2($pdf); } if ($arrPDF["\141\154\154\x70\141\x67\145\163"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\x70\141\147\145"]; } $pagecount++; if (!Self::E9EBD6F7C44D361732DA31836C7D15BD() && $pagecount > 2) { break; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pagewidth = $arrPageDimensions["\167\153"]; } } if (!Self::E9EBD6F7C44D361732DA31836C7D15BD() && $pagecount > 2) { break; } $borderleft = $arrItem["\x70\x6f\x73\x78\x79"][0] + $arrPDF["\x6f\146\x66\163\x65\164"][0]; $borderright = 0 - $arrPDF["\157\x66\x66\x73\x65\164"][0]; if ($arrItem["\142\x6f\x72\144\145\x72\x72\151\x67\150\x74"] != '' && is_numeric($arrItem["\142\157\162\144\145\x72\162\151\147\x68\x74"]) && $pagewidth - $arrItem["\x62\157\x72\144\145\162\x72\151\147\x68\x74"] > $arrItem["\x70\x6f\163\x78\x79"][0]) { $borderright = $arrItem["\x62\x6f\x72\144\145\162\162\151\x67\150\x74"] - $arrPDF["\x6f\146\x66\x73\145\164"][0]; } $pdf->SetMargins($borderleft, 0, $borderright); $pos[0] = $arrItem["\160\x6f\163\x78\x79"][0] + $arrPDF["\157\x66\x66\163\x65\x74"][0]; $pos[1] = $arrItem["\160\157\x73\170\171"][1] + $arrPDF["\157\x66\146\x73\x65\x74"][1]; $pdf->SetXY($pos[0], $pos[1]); $pdf->writeHTML(nl2br(trim($text)), false, false, true, false, $align); $hascontent = true; } } if (Self::E9EBD6F7C44D361732DA31836C7D15BD() === true || $pagecount < 2) { while ($page < $pages && $arrPDF["\x61\154\154\160\x61\147\x65\163"] == 1) { if ($page > 0) { Self::C1B98360E6714BCA818AC62C8F21E9F2($pdf); } $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } $pagecount++; $pdf->AddPage(); $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } } if ($page > 0) { Self::C1B98360E6714BCA818AC62C8F21E9F2($pdf); $pdf->lastPage(); } if ($arrPDF["\x70\x72\157\x74\145\x63\164"] == 1) { if (in_array("\160\162\x69\x6e\x74\x2d\150\x69\x67\150", $arrPDF["\160\162\157\164\x65\143\x74\146\x6c\x61\x67\x73"]) && !in_array("\x70\x72\151\156\164", $arrPDF["\160\162\157\164\x65\x63\x74\x66\154\141\x67\x73"])) { $arrPDF["\160\162\x6f\x74\145\143\x74\x66\154\141\147\163"][] = "\x70\162\x69\156\164"; } $opass = $arrPDF["\157\160\145\x6e\x70\x61\163\163\167\157\162\x64"]; if (empty($opass)) { $pass = $arrPDF["\x70\x61\x73\163\167\157\162\x64"]; if (empty($pass)) { $pass = null; } $pdf->SetProtection(array_diff(Self::$arrProtectflags, $arrPDF["\160\x72\157\x74\x65\143\x74\x66\x6c\x61\147\x73"]), '', $pass, 1, NULL); } else { $pdf->SetProtection(Self::$arrProtectflags, $opass, $opass, 1, NULL); } } $result = true; if ($mode === "\x44") { $pdf->Output($arrPDF["\146\157\162\x6d\x74\151\x74\x6c\145"] . "\x2e\x70\x64\x66", "\104"); } else { if ($hascontent) { $pdf->Output(TL_ROOT . "\57" . $datei, "\x46"); $_SESSION["\x70\144\x66\x5f\x66\x6f\162\x6d\x73"]["\x70\x64\x66\x64\157\x63\x75\155\145\156\164"] = $datei; } else { @unlink(TL_ROOT . "\57" . $datei); $result = false; } } unset($pdf); return $result; } protected static function checkBedingung($item, $arrPDF) { $bedingung = Self::normalisierung($item["\x62\145\x64\x69\x6e\x67\165\156\147"]); if (isset($arrPDF["\x61\x72\162\x46\x69\145\154\x64\x73"][$bedingung])) { if ($item["\151\x6e\166\x65\x72\164"] !== "\145\x6d\x70\164\171") { if ($arrPDF["\x61\162\162\106\x69\x65\154\144\x73"][$bedingung]["\166\x61\154\x75\x65"] === '' || $arrPDF["\141\x72\162\106\151\x65\154\144\x73"][$bedingung]["\x76\x61\154\165\x65"] === null) { return false; } } else { if ($arrPDF["\141\x72\162\x46\x69\145\x6c\144\163"][$bedingung]["\x76\141\154\x75\x65"] !== '' && $arrPDF["\141\162\162\x46\x69\145\154\x64\163"][$bedingung]["\166\x61\154\165\x65"] !== null) { return false; } } } else { $found = 0; foreach ($arrPDF["\x61\162\162\x46\x69\x65\x6c\x64\x73"] as $name => $val) { if ($val["\164\x79\x70\145"] !== "\163\x65\x6c\145\x63\164" && $val["\164\x79\160\x65"] !== "\162\141\144\x69\x6f" && $val["\x74\171\x70\x65"] !== "\143\x68\x65\x63\x6b\142\157\170" && $val["\164\x79\x70\145"] !== "\x63\155\x5f\x61\x6c\164\145\162\156\x61\x74\x69\x76\x65") { continue; } if (!is_array($val["\x76\141\154\x75\145"])) { if ($item["\151\x6e\166\x65\x72\164"] !== "\x65\x6d\x70\164\x79") { if ($bedingung !== Self::normalisierung($val["\166\x61\x6c\165\x65"], $name)) { continue; } } else { if ($bedingung === Self::normalisierung($val["\x76\x61\x6c\x75\145"], $name)) { continue; } } } else { if ($item["\151\x6e\166\x65\x72\x74"] !== "\145\155\160\164\x79") { if (!in_array($bedingung, Self::normalisierung($val["\166\x61\154\x75\145"], $name))) { continue; } } else { if (in_array($bedingung, Self::normalisierung($val["\166\141\x6c\165\x65"], $name))) { continue; } } } $found = 1; } if (!$found) { return false; } } return true; } protected static function C1B98360E6714BCA818AC62C8F21E9F2($pdf) { if (!Self::E9EBD6F7C44D361732DA31836C7D15BD()) { $x = $pdf->GetX(); $y = $pdf->GetY(); $arrPageDimensions = $pdf->getPageDimensions(); $pdf->SetXY(15, $arrPageDimensions["\x68\x6b"] - 14); $pdf->writeHTML("\74\x73\160\x61\156\x20\163\x74\171\x6c\145\x3d\42\x63\x6f\x6c\157\x72\72\43\x66\x66\60\60\60\x30\73\142\141\x63\x6b\147\162\157\x75\156\x64\55\x63\157\154\157\x72\72\43\146\146\x65\145\x65\x65\x3b\x66\157\156\x74\x2d\163\x69\172\145\72\x39\160\170\x3b\146\157\x6e\x74\55\x77\145\x69\147\x68\x74\72\142\157\154\x64\42\76\x26\156\x62\163\x70\x3b\46\156\142\163\160\73\75\x3d\x20\x44\x45\x4d\x4f\x20\x76\145\162\x73\x69\x6f\x6e\x20\157\x66\x20\x64\157\55\x77\150\151\154\x65\57\x63\157\156\164\x61\x6f\x2d\160\x64\146\x66\x6f\162\x6d\163\x2d\x62\x75\156\144\154\145\x20\55\x20\x6d\141\x78\x69\x6d\165\155\x20\x32\40\160\x61\147\x65\x73\40\x2d\40\102\x75\171\40\114\x69\143\145\156\x63\x65\40\x6b\x65\171\41\x20\75\75\x26\x6e\142\163\160\x3b\46\x6e\x62\163\x70\73\74\57\163\160\141\156\76", false, true, true, false, "\114"); $pdf->SetXY($x, $y); } } protected static function E9EBD6F7C44D361732DA31836C7D15BD() { $k = str_split(Config::get(constant("\x50\122\x4f\104\x55\103\x54") . constant("\114\x49\x5a\x45\x4e\x5a\x50")), strlen(constant("\126\x30\126\64\130\x4a\105\167\x74\166\x32\x46\103\x76\x58\x6c\x52\x4e"))); $p = eval("\162\145\164\x75\162\x6e\40\163\165\142\163\x74\162\50\42\x30\60\x30\60\x22\56\163\164\x72\x74\157\165\x70\x70\145\x72\50\x64\x65\143\150\x65\170\50\143\162\x63\x33\x32\x28\155\144\65\50\42" . constant("\x50\122\117\x44\125\103\124") . "\x3a\x22\56\163\165\x62\163\164\162\50\x56\x45\x52\123\111\x4f\x4e\x2c\x30\x2c\61\51\56\42\72" . $k[0] . "\42\51\x29\51\x29\x2c\x2d\x34\51\73"); return !empty($p) && isset($k[1]) && $p === $k[1]; } public static function encrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); for ($x = 0, $l = strlen($varValue); $x < $l; $x++) { $out[$x] = ord($varValue[$x]) * 3 + mt_rand(350, 16000); } mt_srand(); return implode("\56", $out); } public static function decrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); $blocks = explode("\x2e", $varValue); foreach ($blocks as $block) { $ord = (intval($block) - mt_rand(350, 16000)) / 3; $out[] = chr($ord); } mt_srand(); return implode('', $out); } public static function normalisierung($name, $field = '') { if (!empty($field)) { $field .= "\176"; } if (is_array($name)) { for ($i = 0; $i < count($name); $i++) { $name[$i] = $field . str_replace(array("\x20", "\x28", "\x29"), array("\x5f", '', ''), strtolower($name[$i])); } } else { $name = $field . str_replace(array("\40", "\50", "\x29"), array("\137", '', ''), strtolower($name)); } return $name; } public static function getRandomPassword() { $tokens = "\141\x41\142\x42\x63\103\144\104\145\105\146\x46\x67\107\150\110\151\152\112\153\113\114\x6d\115\156\x4e\157\160\x50\161\x51\x72\122\x73\x53\x74\x54\x75\x55\x76\126\167\127\x78\130\171\x59\x7a\132\x2d\44\41\61\x32\63\64\65\x36\x37\70\71"; $pw = ''; for ($i = 0; $i < 12; $i++) { $pw .= $tokens[rand(0, strlen($tokens) - 1)]; } return $pw; } public static function getFormFields($formid) { $arrFields = array(); $cm_text = ''; $cm_nr = 0; $objFormField = Database::getInstance()->prepare("\123\105\x4c\105\103\x54\40\52\x20\x46\122\117\x4d\x20\x74\154\x5f\x66\157\x72\x6d\x5f\x66\x69\x65\x6c\x64\x20\x57\x48\105\122\105\40\x69\156\x76\x69\163\151\x62\154\x65\x3c\76\61\40\101\x4e\x44\x20\x70\x69\144\75\77\x20\117\x52\104\x45\x52\x20\102\x59\40\x73\x6f\x72\x74\151\156\147")->execute($formid); if ($objFormField->numRows < 1) { return $arrFields; } while ($objFormField->next()) { $arrRow = array(); $arrRow = $objFormField->row(); $options = StringUtil::deserialize($arrRow["\x6f\160\x74\x69\x6f\x6e\x73"]); switch ($arrRow["\x74\171\160\x65"]) { case "\x73\x75\142\155\151\x74": break; case "\x73\x65\x6c\145\143\x74": case "\x72\141\x64\151\x6f": case "\x63\x68\x65\x63\x6b\142\x6f\170": if (empty($options)) { break; } foreach ($options as $opt) { $arrFields[$arrRow["\x6e\141\x6d\x65"] . "\x7e" . $opt["\x76\x61\x6c\x75\x65"]] = $arrRow["\156\x61\x6d\145"] . "\x7e" . $opt["\166\141\x6c\x75\145"]; } break; case "\143\x6f\x6e\x64\x69\164\151\x6f\x6e": case "\164\x65\x78\164": case "\x74\x65\x78\x74\141\162\x65\141": case "\x68\151\144\x64\145\156": $arrFields[$arrRow["\x6e\x61\155\x65"]] = $arrRow["\156\141\155\x65"]; break; case "\x63\155\x5f\141\x6c\x74\145\x72\156\141\164\x69\166\x65": if ($arrRow["\143\x6d\137\x61\x6c\164\x65\162\156\x61\x74\x69\x76\x65\124\x79\x70\x65"] === "\143\x6d\x5f\163\164\157\x70") { break; } if ($arrRow["\x63\155\137\x61\x6c\x74\145\x72\156\x61\x74\151\166\145\x54\171\160\145"] === "\143\155\x5f\x73\164\x61\162\x74") { $cm_text = $arrRow["\x6e\141\x6d\x65"]; $cm_nr = 0; } else { $cm_nr++; } $arrFields[$cm_text . "\x7e" . $cm_nr] = $cm_text . "\x7e" . $cm_nr; break; } } asort($arrFields, SORT_FLAG_CASE); return $arrFields; } }